{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGrid.js","hooks/UseFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","console","log","gifts","map","img","id","title","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","className","key","src","alt","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAEaA,EAAc,SAAC,GAC3B,IAD4BC,EAC7B,EAD6BA,cAC7B,EACwCC,mBAAS,IADjD,mBACWC,EADX,KACuBC,EADvB,KAiBI,OACI,0BAAMC,SAXW,SAACC,GAIlB,GAFAA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,EAC3B,OAAO,EAEXR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,SAKnC,2BACIC,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,Y,uBCNdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,mGAEsFC,UAAUH,IAFhG,SAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACPC,QAAQC,IAAIF,GAENG,EAAQH,EAAKI,KAAK,SAAAC,GACvB,IAAD,IACI,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXZ,IAAG,OAAEU,QAAF,IAAEA,GAAF,UAAEA,EAAKG,cAAP,iBAAE,EAAaC,wBAAf,aAAE,EAA+Bd,QAZzB,kBAeZQ,GAfY,4CAAH,sDCEXO,EAAU,SAAC,GACvB,IADwBjB,EACzB,EADyBA,SACzB,ECD4B,SAACA,GAC5B,IAAD,EAE8Bd,mBAAS,CAC/BqB,KAAS,GACTW,SAAS,IAJjB,mBAEWC,EAFX,KAEkBC,EAFlB,KAoBI,OAbAC,qBAAU,WAERtB,EAAQC,GACPsB,MAAK,SAAAV,GACFQ,EACI,CACIb,KAAKK,EACLM,SAAQ,SAInB,CAAClB,IAEGmB,EDnBwBI,CAAcvB,GAAjCe,EADhB,EACWR,KAAaW,EADxB,EACwBA,QAEpB,OACI,oCACA,4BAAMlB,GAEJkB,GAAW,eAEb,yBAAKM,UAAU,kBAEXT,EAAOJ,KAAI,SAACI,GAAD,OAEP,yBAAKU,IAAKV,EAAOb,IAAKsB,UAAU,8CAC5B,yBAAKE,IAAKX,EAAOb,IAAKyB,IAAI,WAC1B,yBAAKH,UAAU,aACX,4BAAI,2BAAIT,EAAOF,KACf,2BAAIE,EAAOD,eEjBtBc,EAAgB,WAAO,IAAD,EAEK1C,mBAAS,CAAC,cAFf,mBAExB2C,EAFwB,KAEZ5C,EAFY,KAG/B,OACI,oCACI,+CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAExB4C,EAAWlB,KAAI,SAAAX,GAAQ,OAAK,kBAAC,EAAD,CAASyB,IAAKzB,EAAUA,SAAUA,SCP9E8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.ee5b5d88.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddCategory = ({setCategories}) => \r\n{\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => \r\n    {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => \r\n    {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length < 2)\r\n            return false;\r\n\r\n        setCategories( cats => [inputValue, ...cats]);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}></input>\r\n        </form>\r\n    )\r\n}","\r\n    export const getGifs = async(category)  => \r\n    {\r\n        const url = `https://api.giphy.com/v1/gifs/search?limit=10&api_key=rtnGT3XMCITDK2FMOrsLIA2fng7Zffaz&q=${ encodeURI(category) }`\r\n        const resp = await fetch (url);\r\n        const {data} = await resp.json();\r\n        console.log(data);\r\n\r\n        const gifts = data.map (img => \r\n        {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img?.images?.downsized_medium?.url\r\n        }})\r\n\r\n        return gifts;\r\n\r\n    }","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/UseFetchGifs'\r\n\r\nexport const GifGrid = ({category}) => \r\n{\r\n    const {data:images, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n        <h2>{ category }</h2>\r\n\r\n        { loading && 'Cargando... ' }\r\n        \r\n        <div className=\"card-container\">\r\n        {\r\n            images.map((images) => \r\n\r\n                <div key={images.url} className=\"card animate__animated animate__fadeInDown\">\r\n                    <img src={images.url} alt=\"Avatar\"></img>\r\n                    <div className=\"container\">\r\n                        <h4><b>{images.id}</b></h4>\r\n                        <p>{images.title}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        </div>\r\n        </>\r\n    )\r\n\r\n    \r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => \r\n{\r\n    \r\n    const [state, setstate] = useState({\r\n        data:    [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n      //getGifs(category).then(setImages)\r\n      getGifs(category)\r\n      .then(img => {\r\n          setstate(\r\n              {\r\n                  data:img,\r\n                  loading:false\r\n              }\r\n          )\r\n      })\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GiftExpertApp = () => {\r\n        \r\n    const [categories, setCategories] = useState([\"One Punch\"]);\r\n    return (\r\n        <>\r\n            <h2>Gift Expert App</h2>  \r\n            <hr></hr>\r\n            <AddCategory setCategories={setCategories}></AddCategory>\r\n            {\r\n                categories.map(category=> ( <GifGrid key={category} category={category}></GifGrid>))\r\n            } \r\n        </>\r\n    )\r\n}\r\n\r\n    //const handleAdd = () => \r\n    //{\r\n      //  setCategories([...categories, 'HunterxHunters']);\r\n   // }\r\n   //<button onClick={handleAdd}> Agregar</button>\r\n   //const categories = [\"One Punch\", \"Samurai x\", \"Dragon all\"];\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GiftExpertApp } from './GiftExpertApp';\n\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}